//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class NetBufferWrap
{
	public static void Register(LuaState L)
	{
		L.BeginStaticLibs("NetBuffer");
		L.RegFunction("SendCmd", SendCmd);
		L.RegVar("s_protoId", get_s_protoId, set_s_protoId);
		L.RegVar("s_bytes", get_s_bytes, set_s_bytes);
		L.EndStaticLibs();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SendCmd(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			bool o = NetBuffer.SendCmd();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_s_protoId(IntPtr L)
	{
		LuaDLL.lua_pushinteger(L, NetBuffer.s_protoId);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_s_bytes(IntPtr L)
	{
		ToLua.Push(L, NetBuffer.s_bytes);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_s_protoId(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			NetBuffer.s_protoId = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_s_bytes(IntPtr L)
	{
		try
		{
			LuaByteBuffer arg0 = new LuaByteBuffer(ToLua.CheckByteBuffer(L, 2));
			NetBuffer.s_bytes = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

